// When you have made your ASP-related libraries in the systemjx.asp package, import them
// using the following statement:
// import systemjx.asp.*;
import com.systemjx.group8.ASPCommunication;
import com.systemj.lang.*;
import java.util.*;
CD1(output Object channel C1, C2;)->
{
	{
		send C1(1);
		while(true){
			pause;
		}
	}
	||
	{
		send C2(1);
		while(true){
			pause;
		}	
	}
}

CD2(input Object channel C1,C2;)->
{
	// Receiving the arrays
	{receive C1;} || {receive C2;}



	RTSMain.out.println("Array Data Received");


	int[] listB = new int[8];
		pause;
		listB[0] = 0x0;
		listB[1] = 0x99;
		pause;
		listB[2] = 0x101;
		listB[3] = 0x103;
		listB[4] = 0x105;
		pause;
		listB[5] = 0x107;
		listB[6] = 0x109;
		listB[7] = 0x0;

	int[] listA = new int[8];
		pause;
		listA[0] = 0xECE;
		listA[1] = 0x111;
		pause;
		listA[2] = 0x222;
		listA[3] = 0x333;
		listA[4] = 0x444;
		pause;
		listA[5] = 0x555;
		listA[6] = 0x666;
		listA[7] = 0x777;


	pause;
	int dataResult = ASPCommunication.store(0,listB,0,1);
	pause;
	RTSMain.out.println("STR result = " + Integer.toBinaryString(dataResult));
	pause;
	dataResult = ASPCommunication.store(0,listA,0,0);
	pause;
	RTSMain.out.println("STR result = " + Integer.toBinaryString(dataResult));
	pause;
	dataResult = ASPCommunication.xor(0,1,0,7);
	RTSMain.out.println("XOR result = " + Integer.toBinaryString(dataResult));
	long macResult = ASPCommunication.mac(0,0,7);
	RTSMain.out.println("MAC result = " + macResult);
	while(true){pause;}

}
